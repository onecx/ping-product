name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'fix/[0-9]+.[0-9]+.x'
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CONTAINER_IMAGE_REGISTRY: 'ghcr.io'    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # login to github docker registry in the organization
      - uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}          
      # setup node.js
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node }}
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v3
        id: nx-shas
      - run: npm install --package-lock-only
      - run: npm ci
      - run: npx nx format:check --base=${{ steps.nx-shas.outputs.base }} --head=${{ steps.nx-shas.outputs.head }} --verbose
      - run: npx nx affected --base=${{ steps.nx-shas.outputs.base }} --head=${{ steps.nx-shas.outputs.head }} -t lint --parallel=3
      - run: npx nx affected --base=${{ steps.nx-shas.outputs.base }} --head=${{ steps.nx-shas.outputs.head }} -t test --parallel=3
      - run: npx nx affected --base=${{ steps.nx-shas.outputs.base }} --head=${{ steps.nx-shas.outputs.head }} -t build --parallel=3