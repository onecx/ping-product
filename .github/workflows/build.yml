name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'fix/[0-9]+.[0-9]+.x'
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CONTAINER_IMAGE_REGISTRY: 'ghcr.io'    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Git
        run: |
          git config user.name "tkit-dev"
          git config user.email "tkit-dev@1000kit.org"          
      # login to github docker registry in the organization
      - uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}          
      # setup node.js
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node }}
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v3
      - run: npm ci
      # - run: npx nx format:check --base=${{ steps.nx-shas.outputs.base }} --head=${{ steps.nx-shas.outputs.head }} --verbose
      - run: npx nx affected --base=$NX_BASE --head=$NX_HEAD -t lint --parallel=3
      - run: npx nx affected --base=$NX_BASE --head=$NX_HEAD -t test --parallel=3
      - run: npx nx affected --base=$NX_BASE --head=$NX_HEAD -t build --parallel=3
      - run: npx nx affected --base=$NX_BASE --head=$NX_HEAD -t publish --exclude='*,!tag:publish:microservice' --parallel=1 --push
        env:        
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_PUSH: "true"
          INPUT_TKIT_HELM_PUSH: "true"
          